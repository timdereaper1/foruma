type Post {
	id: ID!
	body: String!
	createdAt: String
	updatedAt: String
	totalComments: Int!
	comments: [Comment]!
	user: User!
}

type Comment {
	id: ID!
	body: String!
	createdAt: String
	updatedAt: String
	post: Post!
	user: User!
}

type User {
	id: ID!
	alias: String!
	email: String!
	totalPosts: Int!
	totalComments: Int!
	posts: [Post]
	comments: [Comment]
	createdAt: String
	updatedAt: String
}

type AuthUser {
	id: ID!
	alias: String!
	email: String!
	totalPosts: Int!
	totalComments: Int!
	posts: [Post]
	comments: [Comment]
	createdAt: String
	updatedAt: String
	token: String!
}

input AddPost {
	body: String!
}

input AddComment {
	body: String!
	postId: String!
}

input Login {
	alias: String
	email: String!
	password: String!
}

type Query {
	getTrendingPosts: [Post]!
}

type Mutation {
	createNewPost(data: AddPost!): Post!
	commentOnPost(data: AddComment!): Comment!
	signInToAccount(data: Login!): AuthUser!
}
